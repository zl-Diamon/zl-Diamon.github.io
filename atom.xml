<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sweet Candy</title>
  
  <subtitle>I will in life and deth</subtitle>
  <link href="http://www.zllwsy.com/atom.xml" rel="self"/>
  
  <link href="http://www.zllwsy.com/"/>
  <updated>2021-01-06T02:01:43.106Z</updated>
  <id>http://www.zllwsy.com/</id>
  
  <author>
    <name>Diamond</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ConcurrentHashMap原理</title>
    <link href="http://www.zllwsy.com/2021/01/06/ConcurrentHashMap%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/06/ConcurrentHashMap%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-06T01:16:19.000Z</published>
    <updated>2021-01-06T02:01:43.106Z</updated>
    
    
    <summary type="html">&lt;p&gt;1.在了解ConcurrentHashMap之前一定需要知道HashMap和HashTable的区别？&lt;/p&gt;
&lt;p&gt;这是一个老生常谈的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;线程安全方面：HashMap是非线程安全的，HashTable是线程安全的；HashTable内部的方法基本都经过synchronized修饰；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;效率方面：因为线程安全的问题，HashMap要不HashTable效率高一点；&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-ConcurrentHashMap" scheme="http://www.zllwsy.com/tags/ConcurrentHashMap/"/>
    
  </entry>
  
  <entry>
    <title>单例模式总结</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-06T01:14:10.000Z</published>
    <updated>2021-01-06T01:15:24.110Z</updated>
    
    
    <summary type="html">&lt;p&gt;要点：     &lt;/p&gt;
&lt;p&gt;1.是某个类只能有一个实例， 构造器私有化  &lt;/p&gt;
&lt;p&gt;2.是它必须自行创建这个实例，含有一个该类的静态变量来保存这个唯一的实例  &lt;/p&gt;
&lt;p&gt;3.是它必须自行向整个系统提供这个实例，对外提供获取该实例对象的方式：直接暴露、用静态变量的get方法获取&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Singleton" scheme="http://www.zllwsy.com/tags/Singleton/"/>
    
  </entry>
  
  <entry>
    <title>边遍历边移除Collection的元素</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E8%BE%B9%E9%81%8D%E5%8E%86%E8%BE%B9%E7%A7%BB%E9%99%A4Collection%E7%9A%84%E5%85%83%E7%B4%A0/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E8%BE%B9%E9%81%8D%E5%8E%86%E8%BE%B9%E7%A7%BB%E9%99%A4Collection%E7%9A%84%E5%85%83%E7%B4%A0/</id>
    <published>2021-01-06T01:12:50.000Z</published>
    <updated>2021-01-06T01:13:40.742Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;边遍历边移除Collection的唯一正确方式是使用Iterator.remove()方法，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Remove" scheme="http://www.zllwsy.com/tags/Remove/"/>
    
  </entry>
  
  <entry>
    <title>调用start()方法为什么会执行run()方法</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E8%B0%83%E7%94%A8start-%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%89%A7%E8%A1%8Crun-%E6%96%B9%E6%B3%95/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E8%B0%83%E7%94%A8start-%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%89%A7%E8%A1%8Crun-%E6%96%B9%E6%B3%95/</id>
    <published>2021-01-06T01:10:26.000Z</published>
    <updated>2021-01-06T01:11:44.571Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;new 一个 Thread，线程进入了新建状态。调用 start() 方法，会启动一个线程并使线程进入了就绪状态，当分配到时间片后就可以开始运行了。 start() 会执行线程的相应准备工作，然后自动执行 run()</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Start -Run" scheme="http://www.zllwsy.com/tags/Start-Run/"/>
    
  </entry>
  
  <entry>
    <title>重写HashCode的原理</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E9%87%8D%E5%86%99HashCode%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E9%87%8D%E5%86%99HashCode%E7%9A%84%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-06T01:09:10.000Z</published>
    <updated>2021-01-06T01:11:28.358Z</updated>
    
    
    <summary type="html">&lt;p&gt;​       hashCode()的作用是获取哈希码，它实际上返回了一个int整数，这个哈希码的作用就是确定该对象在哈希表中的索引位置，并且hashCode()方法被定义在Object.java中，这就意味着java中任何类都包含了hashCode()函数；&lt;/p&gt;
&lt;p&gt;为什么要有hashCode呢？&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-HashCode" scheme="http://www.zllwsy.com/tags/HashCode/"/>
    
  </entry>
  
  <entry>
    <title>Servlet线程是否安全及原因</title>
    <link href="http://www.zllwsy.com/2021/01/06/Servlet%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%90%A6%E5%AE%89%E5%85%A8%E5%8F%8A%E5%8E%9F%E5%9B%A0/"/>
    <id>http://www.zllwsy.com/2021/01/06/Servlet%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%90%A6%E5%AE%89%E5%85%A8%E5%8F%8A%E5%8E%9F%E5%9B%A0/</id>
    <published>2021-01-06T01:07:21.000Z</published>
    <updated>2021-01-06T01:09:17.508Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;线程安全是编程中的术语，指某个方法在多线程环境中被调用时，能够正确地处理多个线程之间的共享变量，使程序功能正确完成。&lt;/p&gt;
&lt;p&gt;Servlet 不是线程安全的，servlet</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Servlet" scheme="http://www.zllwsy.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>Java集合的快速失败机制</title>
    <link href="http://www.zllwsy.com/2021/01/06/Java%E9%9B%86%E5%90%88%E7%9A%84%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5%E6%9C%BA%E5%88%B6/"/>
    <id>http://www.zllwsy.com/2021/01/06/Java%E9%9B%86%E5%90%88%E7%9A%84%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5%E6%9C%BA%E5%88%B6/</id>
    <published>2021-01-06T01:05:01.000Z</published>
    <updated>2021-01-06T01:11:49.664Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;”fail-fast“&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是Java集合的一种错误监测机制，当多个线程对集合进行结构上的改变的操作的时候，就可能会产生fail-fast机制，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：迭代器在遍历时直接访问集合中</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Fail-fast" scheme="http://www.zllwsy.com/tags/Fail-fast/"/>
    
  </entry>
  
  <entry>
    <title>使用Typora写了一个Hello World</title>
    <link href="http://www.zllwsy.com/2020/12/02/hello-world/"/>
    <id>http://www.zllwsy.com/2020/12/02/hello-world/</id>
    <published>2020-12-02T11:53:09.814Z</published>
    <updated>2020-12-02T12:41:45.701Z</updated>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="-Blog System" scheme="http://www.zllwsy.com/categories/Blog-System/"/>
    
    
    <category term="-Typora" scheme="http://www.zllwsy.com/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--Show Profile进行Sql分析及优化</title>
    <link href="http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-Show-Profile%E8%BF%9B%E8%A1%8CSql%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-Show-Profile%E8%BF%9B%E8%A1%8CSql%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/</id>
    <published>2020-11-29T14:17:58.000Z</published>
    <updated>2020-12-02T11:53:09.066Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Show Profile的作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是mysql提供可以用来分析当前会话中语句执行的资源消耗情况。可以用于SQL的调优测量，&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -索引 -优化 -Show Profile" scheme="http://www.zllwsy.com/tags/Mysql-%E7%B4%A2%E5%BC%95-%E4%BC%98%E5%8C%96-Show-Profile/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--全局查询日志</title>
    <link href="http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-%E5%85%A8%E5%B1%80%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    <id>http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-%E5%85%A8%E5%B1%80%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</id>
    <published>2020-11-29T14:17:18.000Z</published>
    <updated>2020-12-02T11:53:09.074Z</updated>
    
    
    <summary type="html">&lt;p&gt;首先需要记住的是&lt;strong&gt;永远不要在生产环境开启这个功能，&lt;/strong&gt;一般都是测试环境开启监测。&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -全局日志" scheme="http://www.zllwsy.com/tags/Mysql-%E5%85%A8%E5%B1%80%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>单点登录-九-单点登录功能测试</title>
    <link href="http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%B9%9D-%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%B9%9D-%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95/</id>
    <published>2020-11-29T13:43:28.000Z</published>
    <updated>2020-12-02T11:53:07.663Z</updated>
    
    
    <summary type="html">&lt;p&gt;Sso-server模块、System-a、System-b模块都完成了，还有疑问的请参看：&lt;/p&gt;</summary>
    
    
    
    <category term="-单点登录" scheme="http://www.zllwsy.com/categories/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
    <category term="-阿里云 -Linux -Docker -nacos" scheme="http://www.zllwsy.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91-Linux-Docker-nacos/"/>
    
  </entry>
  
  <entry>
    <title>单点登录-八-模块System-b</title>
    <link href="http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%85%AB-%E6%A8%A1%E5%9D%97System-b/"/>
    <id>http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%85%AB-%E6%A8%A1%E5%9D%97System-b/</id>
    <published>2020-11-29T13:43:02.000Z</published>
    <updated>2020-12-02T11:53:07.402Z</updated>
    
    
    <summary type="html">&lt;p&gt;系统A已经完成了，系统B其实没什么差别，主要的逻辑都已经在Sso-server模块中完成，如果还有所不懂请参看文档：&lt;/p&gt;</summary>
    
    
    
    <category term="-单点登录" scheme="http://www.zllwsy.com/categories/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
    <category term="-阿里云 -Linux -Docker -nacos -System-b" scheme="http://www.zllwsy.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91-Linux-Docker-nacos-System-b/"/>
    
  </entry>
  
  <entry>
    <title>单点登录-七-模块System-a</title>
    <link href="http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%B8%83-%E6%A8%A1%E5%9D%97System-a/"/>
    <id>http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%B8%83-%E6%A8%A1%E5%9D%97System-a/</id>
    <published>2020-11-29T13:42:39.000Z</published>
    <updated>2020-12-02T11:53:07.597Z</updated>
    
    
    <summary type="html">&lt;p&gt;害，Sso-server模块的认证中心已经完成，我自己逻辑很清晰，但是我感觉写的有点乱，但是别慌，我后面会提供完整的源码，Sso-server模块不懂的请参看：&lt;/p&gt;</summary>
    
    
    
    <category term="-单点登录" scheme="http://www.zllwsy.com/categories/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
    <category term="-阿里云 -Linux -Docker -nacos -System-a" scheme="http://www.zllwsy.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91-Linux-Docker-nacos-System-a/"/>
    
  </entry>
  
  <entry>
    <title>单点登录-六-模块Sso-server</title>
    <link href="http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%85%AD-%E6%A8%A1%E5%9D%97Sso-server/"/>
    <id>http://www.zllwsy.com/2020/11/29/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E5%85%AD-%E6%A8%A1%E5%9D%97Sso-server/</id>
    <published>2020-11-29T13:42:12.000Z</published>
    <updated>2020-12-02T11:53:07.336Z</updated>
    
    
    <summary type="html">&lt;p&gt;nacos安装完成，那么就需要在配置文件中配置，并且在nacos服务中新建命名空间，&lt;/p&gt;</summary>
    
    
    
    <category term="-单点登录" scheme="http://www.zllwsy.com/categories/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
    <category term="-阿里云 -Linux -Docker -nacos -Sso-server" scheme="http://www.zllwsy.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91-Linux-Docker-nacos-Sso-server/"/>
    
  </entry>
  
  <entry>
    <title>单点登录-五-Doccker安装配置nacos</title>
    <link href="http://www.zllwsy.com/2020/11/24/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%BA%94-Doccker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEnacos/"/>
    <id>http://www.zllwsy.com/2020/11/24/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95-%E4%BA%94-Doccker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEnacos/</id>
    <published>2020-11-24T11:26:51.000Z</published>
    <updated>2020-12-02T11:53:07.061Z</updated>
    
    
    <summary type="html">&lt;p&gt;既然决定使用微服务框架，那肯定还是nacos香，我的nacos依然是放在Linux系统中，并且使用了docker容器，&lt;/p&gt;</summary>
    
    
    
    <category term="-单点登录" scheme="http://www.zllwsy.com/categories/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    
    
    <category term="-阿里云 -Linux -Docker -nacos" scheme="http://www.zllwsy.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91-Linux-Docker-nacos/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--批量新增数据脚本</title>
    <link href="http://www.zllwsy.com/2020/11/24/Mysql%E8%BF%9B%E9%98%B6-%E6%89%B9%E9%87%8F%E6%96%B0%E5%A2%9E%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.zllwsy.com/2020/11/24/Mysql%E8%BF%9B%E9%98%B6-%E6%89%B9%E9%87%8F%E6%96%B0%E5%A2%9E%E6%95%B0%E6%8D%AE%E8%84%9A%E6%9C%AC/</id>
    <published>2020-11-24T11:21:17.000Z</published>
    <updated>2020-12-02T11:53:08.834Z</updated>
    
    
    <summary type="html">&lt;p&gt;编写存储过程应该很多了吧，我记得我面试的时候都问过我有没有写过存储过程，其实存储过程就是函数，就和Mysql中的now()类似，只不过now是Mysql系统为我们提供的，而我们是需要自己写，&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -存储过程 -函数" scheme="http://www.zllwsy.com/tags/Mysql-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B-%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Springboot定时任务</title>
    <link href="http://www.zllwsy.com/2020/11/24/Springboot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>http://www.zllwsy.com/2020/11/24/Springboot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2020-11-24T11:17:40.000Z</published>
    <updated>2020-12-02T11:53:07.751Z</updated>
    
    
    <summary type="html">&lt;p&gt;定时任务在实际开发中，可以说是应用特别的广泛，以往用的都是Timer对象，而现在用的更多的Scheduled类，那么两个有什么区别呢，这里将一一讲解一下，&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Mysql进阶--索引优化梳理总结</title>
    <link href="http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E6%A2%B3%E7%90%86%E6%80%BB%E7%BB%93/"/>
    <id>http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96%E6%A2%B3%E7%90%86%E6%80%BB%E7%BB%93/</id>
    <published>2020-11-23T11:17:04.000Z</published>
    <updated>2020-12-02T11:53:08.548Z</updated>
    
    
    <summary type="html">&lt;p&gt;到目前为止，已经了解了索引的原理，分类，结构，失效准则等等，我觉得有必要对其进行一系列的测试和总结，&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -索引 -优化 -Explain" scheme="http://www.zllwsy.com/tags/Mysql-%E7%B4%A2%E5%BC%95-%E4%BC%98%E5%8C%96-Explain/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--慢查询日志</title>
    <link href="http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    <id>http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</id>
    <published>2020-11-23T11:16:37.000Z</published>
    <updated>2020-12-02T11:53:08.777Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;h4 id=&quot;首先要知道什么是慢查询日志&quot;&gt;&lt;a href=&quot;#首先要知道什么是慢查询日志&quot; class=&quot;headerlink&quot; title=&quot;首先要知道什么是慢查询日志&quot;&gt;&lt;/a&gt;首先要知道什么是慢查询日志&lt;/h4&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;MySQL的慢查询日志是MySQL提供的一种日志记录，它用来&lt;strong&gt;记录在MySQL中响应时间超过阀值的语句&lt;/strong&gt;，具体指运行时间超过&lt;strong&gt;long_query_time&lt;/strong&gt;值的SQL，则会被记录到慢查询日志中。&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -索引 -慢查询 -Mysqldumpslow" scheme="http://www.zllwsy.com/tags/Mysql-%E7%B4%A2%E5%BC%95-%E6%85%A2%E6%9F%A5%E8%AF%A2-Mysqldumpslow/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--查询截取优化</title>
    <link href="http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E6%9F%A5%E8%AF%A2%E6%88%AA%E5%8F%96%E4%BC%98%E5%8C%96/"/>
    <id>http://www.zllwsy.com/2020/11/23/Mysql%E8%BF%9B%E9%98%B6-%E6%9F%A5%E8%AF%A2%E6%88%AA%E5%8F%96%E4%BC%98%E5%8C%96/</id>
    <published>2020-11-23T11:16:22.000Z</published>
    <updated>2020-12-02T11:53:09.018Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;SQL分析性能步骤：&quot;&gt;&lt;a href=&quot;#SQL分析性能步骤：&quot; class=&quot;headerlink&quot; title=&quot;SQL分析性能步骤：&quot;&gt;&lt;/a&gt;SQL分析性能步骤：&lt;/h4&gt;&lt;p&gt;1.观察，至少跑一天，观察生产的慢SQL情况&lt;/p&gt;
&lt;p&gt;2.开启慢查询日志，设置阈值，比如超过5秒的就是慢SQL，并将其抓取出来&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -索引 -Exists -Explain -In" scheme="http://www.zllwsy.com/tags/Mysql-%E7%B4%A2%E5%BC%95-Exists-Explain-In/"/>
    
  </entry>
  
</feed>
