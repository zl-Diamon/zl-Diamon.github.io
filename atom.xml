<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sweet Candy</title>
  
  <subtitle>I will in life and deth</subtitle>
  <link href="http://www.zllwsy.com/atom.xml" rel="self"/>
  
  <link href="http://www.zllwsy.com/"/>
  <updated>2021-03-29T06:56:26.789Z</updated>
  <id>http://www.zllwsy.com/</id>
  
  <author>
    <name>Diamond</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql数据库连表获取子表Json类型字段内容</title>
    <link href="http://www.zllwsy.com/2021/03/29/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E8%A1%A8%E8%8E%B7%E5%8F%96%E5%AD%90%E8%A1%A8Json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9/"/>
    <id>http://www.zllwsy.com/2021/03/29/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E8%A1%A8%E8%8E%B7%E5%8F%96%E5%AD%90%E8%A1%A8Json%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9/</id>
    <published>2021-03-29T06:05:56.000Z</published>
    <updated>2021-03-29T06:56:26.789Z</updated>
    
    
    <summary type="html">&lt;p&gt;实际开发过程中，总会遇到一些特定的问题，所以也需要一些特殊的解决方法，记录一次最近的SQL例子，A,B表连表查询，关系为一对多，但是查询结果只能为一条，也就是一条A的数据，对应B表很多条数据，但是只取B表最新的一条数据，然后再B表最新的数据中读取一个Json类型字段中的多个值，其中一个值又是一个json类型，还要更深层次获取json中的json中的属性值，再用as建立别名查询出来，你能想到几种方式呢？&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Mysql -JSON_EXTRACT -子查询" scheme="http://www.zllwsy.com/tags/Mysql-JSON-EXTRACT-%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>FeignClient远程调用</title>
    <link href="http://www.zllwsy.com/2021/01/29/FeignClient%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/"/>
    <id>http://www.zllwsy.com/2021/01/29/FeignClient%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/</id>
    <published>2021-01-29T06:58:33.000Z</published>
    <updated>2021-01-29T07:06:14.704Z</updated>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;引入OpenFeign依赖&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义FeignClient接口类（注解&lt;code&gt;@FeignClient&lt;/code&gt;），声明这个接口类是用来远程调用其他服务的&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-OpenFeign" scheme="http://www.zllwsy.com/tags/OpenFeign/"/>
    
  </entry>
  
  <entry>
    <title>Oracle分组过滤数据总结</title>
    <link href="http://www.zllwsy.com/2021/01/29/Oracle%E5%88%86%E7%BB%84%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://www.zllwsy.com/2021/01/29/Oracle%E5%88%86%E7%BB%84%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-29T06:58:08.000Z</published>
    <updated>2021-03-08T01:19:11.547Z</updated>
    
    
    <summary type="html">&lt;p&gt;没怎么用过Oracle，以为差不多，这不就遇到一个坑，因为连表查询，表关系为一对多，要把连查出来的数据过滤为两条，也就是对b表数据进行分组或者说过滤吧，&lt;/p&gt;</summary>
    
    
    
    <category term="-oracle" scheme="http://www.zllwsy.com/categories/oracle/"/>
    
    
    <category term="-oracle -过滤" scheme="http://www.zllwsy.com/tags/oracle-%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>探索equals必须重写hashCode方法的原理</title>
    <link href="http://www.zllwsy.com/2021/01/29/%E6%8E%A2%E7%B4%A2equals%E5%BF%85%E9%A1%BB%E9%87%8D%E5%86%99hashCode%E6%96%B9%E6%B3%95%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/29/%E6%8E%A2%E7%B4%A2equals%E5%BF%85%E9%A1%BB%E9%87%8D%E5%86%99hashCode%E6%96%B9%E6%B3%95%E7%9A%84%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-29T06:57:18.000Z</published>
    <updated>2021-01-29T07:05:14.853Z</updated>
    
    
    <summary type="html">&lt;p&gt;hashCode()的作用是获取哈希码，它实际上返回了一个int整数，这个哈希码的作用就是确定该对象在哈希表中的索引位置，并且hashCode()方法被定义在Object.java中，这就意味着java中任何类都包含了hashCode()函数；&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-@CacheEvict" scheme="http://www.zllwsy.com/tags/CacheEvict/"/>
    
  </entry>
  
  <entry>
    <title>DockerFile文件开发</title>
    <link href="http://www.zllwsy.com/2021/01/29/DockerFile%E6%96%87%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    <id>http://www.zllwsy.com/2021/01/29/DockerFile%E6%96%87%E4%BB%B6%E5%BC%80%E5%8F%91/</id>
    <published>2021-01-29T06:55:45.000Z</published>
    <updated>2021-01-29T07:22:22.192Z</updated>
    
    
    <summary type="html">&lt;p&gt;Docker！真香，谁用谁知道，软件安装简单，部署简单，这是一个简单的dockerfile测试。&lt;/p&gt;</summary>
    
    
    
    <category term="-Docker" scheme="http://www.zllwsy.com/categories/Docker/"/>
    
    
    <category term="-DockerFile -Linux" scheme="http://www.zllwsy.com/tags/DockerFile-Linux/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot自动装配原理</title>
    <link href="http://www.zllwsy.com/2021/01/29/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/29/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-29T06:54:53.000Z</published>
    <updated>2021-01-29T07:25:06.514Z</updated>
    
    
    <summary type="html">&lt;p&gt;读了一下源码，找了一下自动装配的原因。&lt;/p&gt;</summary>
    
    
    
    <category term="-SpringBoot" scheme="http://www.zllwsy.com/categories/SpringBoot/"/>
    
    
    <category term="-自动装配" scheme="http://www.zllwsy.com/tags/%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot整合Shiro</title>
    <link href="http://www.zllwsy.com/2021/01/29/SpringBoot%E6%95%B4%E5%90%88Shiro/"/>
    <id>http://www.zllwsy.com/2021/01/29/SpringBoot%E6%95%B4%E5%90%88Shiro/</id>
    <published>2021-01-29T06:54:37.000Z</published>
    <updated>2021-01-29T07:24:28.322Z</updated>
    
    
    <summary type="html">&lt;p&gt;shiro是较为轻量的权限框架，学习使用一下，但是现在确实这个用的不多了，&lt;strong&gt;Spring Security&lt;/strong&gt;确实更香。&lt;/p&gt;</summary>
    
    
    
    <category term="-shiro" scheme="http://www.zllwsy.com/categories/shiro/"/>
    
    
    <category term="-shiro" scheme="http://www.zllwsy.com/tags/shiro/"/>
    
  </entry>
  
  <entry>
    <title>本地包导入pom依赖方法总结</title>
    <link href="http://www.zllwsy.com/2021/01/29/%E6%9C%AC%E5%9C%B0%E5%8C%85%E5%AF%BC%E5%85%A5pom%E4%BE%9D%E8%B5%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://www.zllwsy.com/2021/01/29/%E6%9C%AC%E5%9C%B0%E5%8C%85%E5%AF%BC%E5%85%A5pom%E4%BE%9D%E8%B5%96%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-29T06:54:18.000Z</published>
    <updated>2021-01-29T07:27:16.780Z</updated>
    
    
    <summary type="html">&lt;p&gt;一般来说，都是直接使用依赖，但总有一些情况想要把本地包加入maven依赖，有两种实现方法。&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-mvn -pom" scheme="http://www.zllwsy.com/tags/mvn-pom/"/>
    
  </entry>
  
  <entry>
    <title>缓存失效模式</title>
    <link href="http://www.zllwsy.com/2021/01/29/%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.zllwsy.com/2021/01/29/%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-01-29T06:53:58.000Z</published>
    <updated>2021-01-29T07:04:01.078Z</updated>
    
    
    <summary type="html">&lt;p&gt;注解@CacheEvict，修改数据后，就自动清空缓存，下次执行后再重新生成缓存&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-@CacheEvict" scheme="http://www.zllwsy.com/tags/CacheEvict/"/>
    
  </entry>
  
  <entry>
    <title>高并发下缓存失效问题</title>
    <link href="http://www.zllwsy.com/2021/01/29/%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>http://www.zllwsy.com/2021/01/29/%E9%AB%98%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/</id>
    <published>2021-01-29T06:53:47.000Z</published>
    <updated>2021-01-29T07:20:02.827Z</updated>
    
    
    <summary type="html">&lt;p&gt;是缓存是在开发中最长遇到的问题，这是总结的经常遇到的几种情况。&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-缓存失效" scheme="http://www.zllwsy.com/tags/%E7%BC%93%E5%AD%98%E5%A4%B1%E6%95%88/"/>
    
  </entry>
  
  <entry>
    <title>ConcurrentHashMap原理</title>
    <link href="http://www.zllwsy.com/2021/01/06/ConcurrentHashMap%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/06/ConcurrentHashMap%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-06T01:16:19.000Z</published>
    <updated>2021-01-06T02:01:43.106Z</updated>
    
    
    <summary type="html">&lt;p&gt;1.在了解ConcurrentHashMap之前一定需要知道HashMap和HashTable的区别？&lt;/p&gt;
&lt;p&gt;这是一个老生常谈的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;线程安全方面：HashMap是非线程安全的，HashTable是线程安全的；HashTable内部的方法基本都经过synchronized修饰；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;效率方面：因为线程安全的问题，HashMap要不HashTable效率高一点；&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-ConcurrentHashMap" scheme="http://www.zllwsy.com/tags/ConcurrentHashMap/"/>
    
  </entry>
  
  <entry>
    <title>单例模式总结</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-06T01:14:10.000Z</published>
    <updated>2021-01-06T01:15:24.110Z</updated>
    
    
    <summary type="html">&lt;p&gt;要点：     &lt;/p&gt;
&lt;p&gt;1.是某个类只能有一个实例， 构造器私有化  &lt;/p&gt;
&lt;p&gt;2.是它必须自行创建这个实例，含有一个该类的静态变量来保存这个唯一的实例  &lt;/p&gt;
&lt;p&gt;3.是它必须自行向整个系统提供这个实例，对外提供获取该实例对象的方式：直接暴露、用静态变量的get方法获取&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Singleton" scheme="http://www.zllwsy.com/tags/Singleton/"/>
    
  </entry>
  
  <entry>
    <title>边遍历边移除Collection的元素</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E8%BE%B9%E9%81%8D%E5%8E%86%E8%BE%B9%E7%A7%BB%E9%99%A4Collection%E7%9A%84%E5%85%83%E7%B4%A0/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E8%BE%B9%E9%81%8D%E5%8E%86%E8%BE%B9%E7%A7%BB%E9%99%A4Collection%E7%9A%84%E5%85%83%E7%B4%A0/</id>
    <published>2021-01-06T01:12:50.000Z</published>
    <updated>2021-01-06T01:13:40.742Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;边遍历边移除Collection的唯一正确方式是使用Iterator.remove()方法，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Remove" scheme="http://www.zllwsy.com/tags/Remove/"/>
    
  </entry>
  
  <entry>
    <title>调用start()方法为什么会执行run()方法</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E8%B0%83%E7%94%A8start-%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%89%A7%E8%A1%8Crun-%E6%96%B9%E6%B3%95/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E8%B0%83%E7%94%A8start-%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%89%A7%E8%A1%8Crun-%E6%96%B9%E6%B3%95/</id>
    <published>2021-01-06T01:10:26.000Z</published>
    <updated>2021-01-06T01:11:44.571Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;new 一个 Thread，线程进入了新建状态。调用 start() 方法，会启动一个线程并使线程进入了就绪状态，当分配到时间片后就可以开始运行了。 start() 会执行线程的相应准备工作，然后自动执行 run()</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Start -Run" scheme="http://www.zllwsy.com/tags/Start-Run/"/>
    
  </entry>
  
  <entry>
    <title>重写HashCode的原理</title>
    <link href="http://www.zllwsy.com/2021/01/06/%E9%87%8D%E5%86%99HashCode%E7%9A%84%E5%8E%9F%E7%90%86/"/>
    <id>http://www.zllwsy.com/2021/01/06/%E9%87%8D%E5%86%99HashCode%E7%9A%84%E5%8E%9F%E7%90%86/</id>
    <published>2021-01-06T01:09:10.000Z</published>
    <updated>2021-01-06T01:11:28.358Z</updated>
    
    
    <summary type="html">&lt;p&gt;​       hashCode()的作用是获取哈希码，它实际上返回了一个int整数，这个哈希码的作用就是确定该对象在哈希表中的索引位置，并且hashCode()方法被定义在Object.java中，这就意味着java中任何类都包含了hashCode()函数；&lt;/p&gt;
&lt;p&gt;为什么要有hashCode呢？&lt;/p&gt;</summary>
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-HashCode" scheme="http://www.zllwsy.com/tags/HashCode/"/>
    
  </entry>
  
  <entry>
    <title>Servlet线程是否安全及原因</title>
    <link href="http://www.zllwsy.com/2021/01/06/Servlet%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%90%A6%E5%AE%89%E5%85%A8%E5%8F%8A%E5%8E%9F%E5%9B%A0/"/>
    <id>http://www.zllwsy.com/2021/01/06/Servlet%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%90%A6%E5%AE%89%E5%85%A8%E5%8F%8A%E5%8E%9F%E5%9B%A0/</id>
    <published>2021-01-06T01:07:21.000Z</published>
    <updated>2021-01-06T01:09:17.508Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;线程安全是编程中的术语，指某个方法在多线程环境中被调用时，能够正确地处理多个线程之间的共享变量，使程序功能正确完成。&lt;/p&gt;
&lt;p&gt;Servlet 不是线程安全的，servlet</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Servlet" scheme="http://www.zllwsy.com/tags/Servlet/"/>
    
  </entry>
  
  <entry>
    <title>Java集合的快速失败机制</title>
    <link href="http://www.zllwsy.com/2021/01/06/Java%E9%9B%86%E5%90%88%E7%9A%84%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5%E6%9C%BA%E5%88%B6/"/>
    <id>http://www.zllwsy.com/2021/01/06/Java%E9%9B%86%E5%90%88%E7%9A%84%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5%E6%9C%BA%E5%88%B6/</id>
    <published>2021-01-06T01:05:01.000Z</published>
    <updated>2021-01-06T01:11:49.664Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;strong&gt;”fail-fast“&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是Java集合的一种错误监测机制，当多个线程对集合进行结构上的改变的操作的时候，就可能会产生fail-fast机制，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;原因&lt;/strong&gt;：迭代器在遍历时直接访问集合中</summary>
        
      
    
    
    
    <category term="-随笔" scheme="http://www.zllwsy.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="-Fail-fast" scheme="http://www.zllwsy.com/tags/Fail-fast/"/>
    
  </entry>
  
  <entry>
    <title>使用Typora写了一个Hello World</title>
    <link href="http://www.zllwsy.com/2020/12/02/hello-world/"/>
    <id>http://www.zllwsy.com/2020/12/02/hello-world/</id>
    <published>2020-12-02T11:53:09.814Z</published>
    <updated>2020-12-02T12:41:45.701Z</updated>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="-Blog System" scheme="http://www.zllwsy.com/categories/Blog-System/"/>
    
    
    <category term="-Typora" scheme="http://www.zllwsy.com/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--Show Profile进行Sql分析及优化</title>
    <link href="http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-Show-Profile%E8%BF%9B%E8%A1%8CSql%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-Show-Profile%E8%BF%9B%E8%A1%8CSql%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/</id>
    <published>2020-11-29T14:17:58.000Z</published>
    <updated>2020-12-02T11:53:09.066Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Show Profile的作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;是mysql提供可以用来分析当前会话中语句执行的资源消耗情况。可以用于SQL的调优测量，&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -索引 -优化 -Show Profile" scheme="http://www.zllwsy.com/tags/Mysql-%E7%B4%A2%E5%BC%95-%E4%BC%98%E5%8C%96-Show-Profile/"/>
    
  </entry>
  
  <entry>
    <title>Mysql进阶--全局查询日志</title>
    <link href="http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-%E5%85%A8%E5%B1%80%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"/>
    <id>http://www.zllwsy.com/2020/11/29/Mysql%E8%BF%9B%E9%98%B6-%E5%85%A8%E5%B1%80%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/</id>
    <published>2020-11-29T14:17:18.000Z</published>
    <updated>2020-12-02T11:53:09.074Z</updated>
    
    
    <summary type="html">&lt;p&gt;首先需要记住的是&lt;strong&gt;永远不要在生产环境开启这个功能，&lt;/strong&gt;一般都是测试环境开启监测。&lt;/p&gt;</summary>
    
    
    
    <category term="-MySQL进阶" scheme="http://www.zllwsy.com/categories/MySQL%E8%BF%9B%E9%98%B6/"/>
    
    
    <category term="-Mysql -全局日志" scheme="http://www.zllwsy.com/tags/Mysql-%E5%85%A8%E5%B1%80%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
</feed>
